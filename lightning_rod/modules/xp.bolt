from ./raw import raw
from ./config import Config
from ./utils import binary_progression

def get_xp_points():
    xp query @s points

def get_xp_level():
    xp query @s levels

def set_xp_points(amount: int):
    return raw(f"xp set @s {amount} points")

def set_xp_level(amount: int):
    return raw(f"xp set @s {amount} levels")

def add_xp_points(amount: int):
    return raw(f"xp add @s {amount} points")

def add_xp_level(amount: int):
    return raw(f"xp add @s {amount} levels")

def set_xp_points_percent(bar_percent: int):
    STATIC_PATH = f"{Config.LOCAL_DIR}/xp/set_xp_points_percent"
    ONE_PERCENT_XP_AMOUNT = 778
    MAGIC_LEVEL = 8772
    previous_level = get_xp_level()
    set_xp_level(MAGIC_LEVEL)
    set_xp_points(ONE_PERCENT_XP_AMOUNT * bar_percent)
    set_xp_level(previous_level)

def _add_from_expression(amount: int, mode: str):
    STATIC_PATH = f"{Config.LOCAL_DIR}/xp/add_xp_{mode}"
    execute function STATIC_PATH:
        for increment in binary_progression(28, reversed=True):
            if amount >= increment:
                execute function ~/{increment}:
                    raw(f"xp add @s {increment} {mode}")
                    amount -= increment
        stopsound @s player minecraft:entity.player.levelup
